{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An auto-generated nested stack.",
  "Metadata": {},
  "Parameters": {
    "DynamoDBModelTableReadIOPS": {
      "Type": "Number",
      "Description": "The number of read IOPS the table should support.",
      "Default": 5
    },
    "DynamoDBModelTableWriteIOPS": {
      "Type": "Number",
      "Description": "The number of write IOPS the table should support.",
      "Default": 5
    },
    "DynamoDBBillingMode": {
      "Type": "String",
      "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes.",
      "Default": "PAY_PER_REQUEST",
      "AllowedValues": [
        "PAY_PER_REQUEST",
        "PROVISIONED"
      ]
    },
    "DynamoDBEnablePointInTimeRecovery": {
      "Type": "String",
      "Description": "Whether to enable Point in Time Recovery on the table",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "DynamoDBEnableServerSideEncryption": {
      "Type": "String",
      "Description": "Enable server side encryption powered by KMS.",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ]
    },
    "AppSyncApiName": {
      "Type": "String",
      "Description": "The name of the AppSync API",
      "Default": "AppSyncSimpleTransform"
    },
    "APIKeyExpirationEpoch": {
      "Type": "Number",
      "Description": "The epoch time in seconds when the API Key should expire. Setting this to 0 will default to 7 days from the deployment date. Setting this to -1 will not create an API Key.",
      "Default": 0,
      "MinValue": -1
    },
    "CreateAPIKey": {
      "Type": "Number",
      "Description": "The boolean value to control if an API Key will be created or not. The value of the property is automatically set by the CLI. If the value is set to 0 no API Key will be created.",
      "Default": 0,
      "MinValue": 0,
      "MaxValue": 1
    },
    "AuthCognitoUserPoolId": {
      "Type": "String",
      "Description": "The id of an existing User Pool to connect. If this is changed, a user pool will not be created for you.",
      "Default": "NONE"
    },
    "env": {
      "Type": "String",
      "Description": "The environment name. e.g. Dev, Test, or Production",
      "Default": "NONE"
    },
    "S3DeploymentBucket": {
      "Type": "String",
      "Description": "The S3 bucket containing all deployment assets for the project."
    },
    "S3DeploymentRootKey": {
      "Type": "String",
      "Description": "An S3 key relative to the S3DeploymentBucket that points to the root of the deployment directory."
    },
    "AppSyncApiId": {
      "Type": "String",
      "Description": "The id of the AppSync API associated with this project."
    },
    "GetAttGraphQLAPIApiId": {
      "Type": "String",
      "Description": "Auto-generated parameter that forwards Fn.GetAtt(GraphQLAPI, ApiId) through to nested stacks."
    }
  },
  "Resources": {
    "PassageTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": {
          "Fn::If": [
            "HasEnvironmentParameter",
            {
              "Fn::Join": [
                "-",
                [
                  "Passage",
                  {
                    "Ref": "GetAttGraphQLAPIApiId"
                  },
                  {
                    "Ref": "env"
                  }
                ]
              ]
            },
            {
              "Fn::Join": [
                "-",
                [
                  "Passage",
                  {
                    "Ref": "GetAttGraphQLAPIApiId"
                  }
                ]
              ]
            }
          ]
        },
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          },
          {
            "AttributeName": "language",
            "AttributeType": "S"
          },
          {
            "AttributeName": "difficulty",
            "AttributeType": "N"
          }
        ],
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "BillingMode": {
          "Fn::If": [
            "ShouldUsePayPerRequestBilling",
            "PAY_PER_REQUEST",
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "ProvisionedThroughput": {
          "Fn::If": [
            "ShouldUsePayPerRequestBilling",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "ReadCapacityUnits": {
                "Ref": "DynamoDBModelTableReadIOPS"
              },
              "WriteCapacityUnits": {
                "Ref": "DynamoDBModelTableWriteIOPS"
              }
            }
          ]
        },
        "SSESpecification": {
          "SSEEnabled": {
            "Fn::If": [
              "ShouldUseServerSideEncryption",
              true,
              false
            ]
          }
        },
        "PointInTimeRecoverySpecification": {
          "Fn::If": [
            "ShouldUsePointInTimeRecovery",
            {
              "PointInTimeRecoveryEnabled": true
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "relevantPassagesIndex",
            "KeySchema": [
              {
                "AttributeName": "language",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "difficulty",
                "KeyType": "RANGE"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            },
            "ProvisionedThroughput": {
              "Fn::If": [
                "ShouldUsePayPerRequestBilling",
                {
                  "Ref": "AWS::NoValue"
                },
                {
                  "ReadCapacityUnits": {
                    "Ref": "DynamoDBModelTableReadIOPS"
                  },
                  "WriteCapacityUnits": {
                    "Ref": "DynamoDBModelTableWriteIOPS"
                  }
                }
              ]
            }
          }
        ]
      },
      "DeletionPolicy": "Delete"
    },
    "PassageIAMRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "RoleName": {
          "Fn::If": [
            "HasEnvironmentParameter",
            {
              "Fn::Join": [
                "-",
                [
                  "Passage894168",
                  "role",
                  {
                    "Ref": "GetAttGraphQLAPIApiId"
                  },
                  {
                    "Ref": "env"
                  }
                ]
              ]
            },
            {
              "Fn::Join": [
                "-",
                [
                  "Passage92e291",
                  "role",
                  {
                    "Ref": "GetAttGraphQLAPIApiId"
                  }
                ]
              ]
            }
          ]
        },
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "DynamoDBAccess",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Fn::If": [
                              "HasEnvironmentParameter",
                              {
                                "Fn::Join": [
                                  "-",
                                  [
                                    "Passage",
                                    {
                                      "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                      "Ref": "env"
                                    }
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "-",
                                  [
                                    "Passage",
                                    {
                                      "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Fn::If": [
                              "HasEnvironmentParameter",
                              {
                                "Fn::Join": [
                                  "-",
                                  [
                                    "Passage",
                                    {
                                      "Ref": "GetAttGraphQLAPIApiId"
                                    },
                                    {
                                      "Ref": "env"
                                    }
                                  ]
                                ]
                              },
                              {
                                "Fn::Join": [
                                  "-",
                                  [
                                    "Passage",
                                    {
                                      "Ref": "GetAttGraphQLAPIApiId"
                                    }
                                  ]
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ]
      }
    },
    "PassageDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "GetAttGraphQLAPIApiId"
        },
        "Name": "PassageTable",
        "Type": "AMAZON_DYNAMODB",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "PassageIAMRole",
            "Arn"
          ]
        },
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": {
            "Fn::If": [
              "HasEnvironmentParameter",
              {
                "Fn::Join": [
                  "-",
                  [
                    "Passage",
                    {
                      "Ref": "GetAttGraphQLAPIApiId"
                    },
                    {
                      "Ref": "env"
                    }
                  ]
                ]
              },
              {
                "Fn::Join": [
                  "-",
                  [
                    "Passage",
                    {
                      "Ref": "GetAttGraphQLAPIApiId"
                    }
                  ]
                ]
              }
            ]
          }
        }
      },
      "DependsOn": [
        "PassageIAMRole"
      ]
    },
    "GetPassageResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "GetAttGraphQLAPIApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PassageDataSource",
            "Name"
          ]
        },
        "FieldName": "getPassage",
        "TypeName": "Query",
        "RequestMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Query",
                    "getPassage",
                    "req",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Query",
                    "getPassage",
                    "res",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "ListPassageResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "GetAttGraphQLAPIApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PassageDataSource",
            "Name"
          ]
        },
        "FieldName": "listPassages",
        "TypeName": "Query",
        "RequestMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Query",
                    "listPassages",
                    "req",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Query",
                    "listPassages",
                    "res",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "CreatePassageResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "GetAttGraphQLAPIApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PassageDataSource",
            "Name"
          ]
        },
        "FieldName": "createPassage",
        "TypeName": "Mutation",
        "RequestMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Mutation",
                    "createPassage",
                    "req",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Mutation",
                    "createPassage",
                    "res",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "UpdatePassageResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "GetAttGraphQLAPIApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PassageDataSource",
            "Name"
          ]
        },
        "FieldName": "updatePassage",
        "TypeName": "Mutation",
        "RequestMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Mutation",
                    "updatePassage",
                    "req",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Mutation",
                    "updatePassage",
                    "res",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        }
      }
    },
    "DeletePassageResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "GetAttGraphQLAPIApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PassageDataSource",
            "Name"
          ]
        },
        "FieldName": "deletePassage",
        "TypeName": "Mutation",
        "RequestMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Mutation",
                    "deletePassage",
                    "req",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Sub": [
            "s3://${S3DeploymentBucket}/${S3DeploymentRootKey}/resolvers/${ResolverFileName}",
            {
              "S3DeploymentBucket": {
                "Ref": "S3DeploymentBucket"
              },
              "S3DeploymentRootKey": {
                "Ref": "S3DeploymentRootKey"
              },
              "ResolverFileName": {
                "Fn::Join": [
                  ".",
                  [
                    "Mutation",
                    "deletePassage",
                    "res",
                    "vtl"
                  ]
                ]
              }
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "GetAttPassageTableStreamArn": {
      "Description": "Your DynamoDB table StreamArn.",
      "Value": {
        "Fn::GetAtt": [
          "PassageTable",
          "StreamArn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "AppSyncApiId"
              },
              "GetAtt",
              "PassageTable",
              "StreamArn"
            ]
          ]
        }
      }
    },
    "GetAttPassageDataSourceName": {
      "Description": "Your model DataSource name.",
      "Value": {
        "Fn::GetAtt": [
          "PassageDataSource",
          "Name"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "AppSyncApiId"
              },
              "GetAtt",
              "PassageDataSource",
              "Name"
            ]
          ]
        }
      }
    },
    "GetAttPassageTableName": {
      "Description": "Your DynamoDB table name.",
      "Value": {
        "Ref": "PassageTable"
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "AppSyncApiId"
              },
              "GetAtt",
              "PassageTable",
              "Name"
            ]
          ]
        }
      }
    }
  },
  "Mappings": {},
  "Conditions": {
    "ShouldUsePayPerRequestBilling": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBBillingMode"
        },
        "PAY_PER_REQUEST"
      ]
    },
    "ShouldUsePointInTimeRecovery": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBEnablePointInTimeRecovery"
        },
        "true"
      ]
    },
    "ShouldUseServerSideEncryption": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBEnableServerSideEncryption"
        },
        "true"
      ]
    },
    "ShouldCreateAPIKey": {
      "Fn::Equals": [
        {
          "Ref": "CreateAPIKey"
        },
        1
      ]
    },
    "APIKeyExpirationEpochIsPositive": {
      "Fn::And": [
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "APIKeyExpirationEpoch"
                },
                -1
              ]
            }
          ]
        },
        {
          "Fn::Not": [
            {
              "Fn::Equals": [
                {
                  "Ref": "APIKeyExpirationEpoch"
                },
                0
              ]
            }
          ]
        }
      ]
    },
    "HasEnvironmentParameter": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "env"
            },
            "NONE"
          ]
        }
      ]
    }
  }
}